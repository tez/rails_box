# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.vm.box = "dummy"

  config.vm.synced_folder ".", "/vagrant",
    type: "rsync",
    owner: "ubuntu",
    group: "ubuntu",
    rsync__exclude: ".git/"

  config.vm.provider :aws do |aws, override|
    # アクセスキー（リポジトリに入れたいので環境変数に保持）
    aws.access_key_id = ENV['AWS_ACCESS_KEY_ID']
    # シークレットアクセスキー（リポジトリに入れたいので環境変数に保持）
    aws.secret_access_key = ENV['AWS_SECRET_ACCESS_KEY']
    # キー名
    aws.keypair_name = "aws_default"
    # インスタンスタイプ（http://aws.amazon.com/jp/ec2/pricing/ を参照）
    aws.instance_type = "t2.micro"
    # リージョン（東京はap-northeast-1）
    aws.region = "ap-northeast-1"
    # アベイラビリティゾーン
    aws.availability_zone = 'ap-northeast-1c'
    # 使用するAMIのID
    aws.ami = "ami-20b6aa21"
    # セキュリティグループ（複数指定でor判定）
    aws.security_groups = ['default']
    # タグ
    aws.tags = {
      name: 'web-server',
      description: 'Ruby on RailsのWEBサーバ'
    }

    # Amazon Linuxの場合は最初からsudoできないので指定しておく
    # aws.user_data = "#!/bin/sh\nsed -i 's/^.*requiretty/#Defaults requiretty/' /etc/sudoers\n"
    # EBSの指定が可能
    # aws.block_device_mapping = [
    #   {
    #     # デバイス名
    #     'DeviceName' => "/dev/sda1",
    #     # 名称
    #     'VirtualName' => "v1",
    #     # ボリュームサイズ（GB単位）
    #     'Ebs.VolumeSize' => 10,
    #     # ターミネートした際に削除するかどうか
    #     'Ebs.DeleteOnTermination' => true,
    #     # EBSのタイプを指定
    #     'Ebs.VolumeType' => 'standard',
    #     #'Ebs.VolumeType' => 'io1',
    #     # standardでIOPSを指定するとエラーが発生するので注意
    #     #'Ebs.Iops' => 1000
    #   }
    # ]
    # -----
    # ここからはVPCを使用する際の設定
    # サブネットID（マネジメントコンソールから取得）
    #aws.subnet_id = 'サブネットID'
    # VPC内のローカルIPアドレスを指定
    #aws.private_id_address = '192.168.0.33'
    # 自動的にEIPを割り当てる場合（EIPの取得上限は5個のためそれ以上の指定はエラーとなる）
    # aws.elastic_ip = true
    # ELBを指定
    # aws.elb = "production-web"
    # -----

    # SSHのユーザー名を指定（Amazon Linuxはec2-user、ubuntuはubuntu、CentOSはroot）
    override.ssh.username = "ubuntu"
    # SSHのKeyのパスを指定
    override.ssh.private_key_path = "~/.ssh/aws_default.pem"

    override.nfs.functional = false
  end

  # chef のバージョンを指定
  config.omnibus.chef_version = :latest

  # Use Chef Solo to provision our virtual machine
  config.vm.provision :chef_solo do |chef|
    chef.cookbooks_path = ["./cookbooks", "./site-cookbooks"]
    chef.add_recipe "build-essential"
    chef.add_recipe "rails_box::build-environment"
    chef.add_recipe "git"
    chef.add_recipe "memcached"
    chef.add_recipe "nodejs"
    # chef.add_recipe "database"
    chef.add_recipe "xml"
    chef.add_recipe "ruby_build"
    chef.add_recipe "rbenv::system"
    chef.add_recipe "nginx"
    chef.add_recipe "imagemagick"
    chef.add_recipe "vim"
    chef.add_recipe "timezone"

    chef.add_recipe "rails_box::ops_user"
    chef.add_recipe "rails_box::keys"
    chef.add_recipe "rails_box::sqlite3_dev"
    # chef.add_recipe "rails_box::mysql"
    chef.add_recipe "rails_box::nginx_setting"
    chef.add_recipe "rails_box::iptables"

    # For development
    chef.add_recipe "rails_box::zsh"
    chef.add_recipe "rails_box::prezto"
    chef.add_recipe "rails_box::git_flow"
    chef.add_recipe "rails_box::tmux"
    chef.add_recipe "rails_box::gemrc"
    chef.add_recipe "rails_box::pryrc"

    # Install Ruby 2.2.1 and Bundler
    chef.json = {
      tz: "Asia/Tokyo",
      rbenv: {
        global: "2.2.2",
        rubies: ["2.2.2"],
        gems: {
          "2.2.2" => [
            { name: "bundler" },
          ]
        }
      }
    }
  end
end
